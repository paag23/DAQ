##Pruebas de ARchivos y POO##

##  Ejercicio POO

#Caractristicas
class Coche():
	"""Clase   Coche"""
	def __init__(self): #CONSTRUCTOR  de estado inicial de Clase 
		self.__largoChasis = 250
		self.__anchoChasis = 120
		self.__ruedas = 4 #PRIVADA no sera accesible FUERA de la clase 
		self.__enmarcha = False # estado inicial 

#Metodos 
	def arracar(self, arrancamos):
		""" Comportamiemto arrancar """
		self.__enmarcha = arrancamos

		if (self.__enmarcha):
			chequeo = self.__chequeo_interrno()

		if (self.__enmarcha and chequeo): # Si es verdadero
			return "EL coche esta en marcha"

		elif(self.__enmarcha and chequeo==False):
			return "No arranca"

		else:
			return "El coche esta parado"


	def estado(self):
		""" Devuelve las caractepisticasd del Objeto  """
		print ("El coche tiene", self.__ruedas, "ruedas. Un ancho de ", self.__anchoChasis,"y un largo de ", self.__largoChasis)	


	def __chequeo_interrno(self):
		print ("realizando chequeo interrno")

		self.gasolina = "ok"
		self.aceite = "ok"
		self.puertas = "cerradas"

		if (self.gasolina == "ok" and self.aceite=="ok" and self.puertas == "cerradas" ):
			return True
		else:
			return False



print("---------- Segundo objeto ------------")		

miCoche = Coche() #Instanciacion de Clase, Ejemplarizacion, 
print (miCoche.arracar(True)) #Cambia a True atraves del Metodo arrancar()
miCoche.estado() 



print("---------- Segundo objeto ------------")

miCoche2 = Coche() #Instanciacion de Clase, Ejemplarizacion
print (miCoche2.arracar(False)) #MAndamos a llamar al metodo y Especificamos el arranque
miCoche2.estado() #Llama al metodo estado 


		
		